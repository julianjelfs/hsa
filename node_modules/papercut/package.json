{
  "name": "papercut",
  "version": "0.0.6",
  "description": "Papercut is a node package to handle image upload, resize and sync with Amazon s3",
  "main": "index.js",
  "keywords": [
    "imagemagick",
    "image",
    "process",
    "s3"
  ],
  "scripts": {
    "test": "cake test"
  },
  "repository": "",
  "dependencies": {
    "coffee-script": "1.4.x",
    "imagemagick": "git://github.com/rsms/node-imagemagick.git",
    "knox": "0.3.x",
    "async": "0.1.x"
  },
  "devDependencies": {
    "mocha": "1.3.x",
    "should": "*",
    "express": "3.0.x"
  },
  "author": {
    "name": "Jimmy Chao",
    "url": "daizenga@gmail.com"
  },
  "license": "MIT",
  "readme": "# PAPERCUT!\n\nPapercut handle image processing, versioning and storage for you, in node.js.\n\n## Features\n\n+ environment configuration\n+ node-imagemagick integration for image resize, crop and copy.\n+ S3 image upload\n\n## Install\n\nIn terminal:\n\n    npm install papercut --save\n\n## Usage\n\n    var papercut = require('papercut');\n\n    papercut.configure(function(){\n      papercut.set('storage', 'file')\n      papercut.set('directory', './images/uploads')\n      papercut.set('url', '/images/uploads')\n    });\n\n    papercut.configure('production', function(){\n      papercut.set('storage', 's3')\n      papercut.set('S3_KEY', process.env.S3_KEY)\n      papercut.set('S3_SECRET', process.env.S3_SECRET)\n      papercut.set('bucket', 'papercut')\n    });\n\n\n    AvatarUploader = papercut.Schema(function(schema){\n      schema.version({\n        name: 'avatar',\n        size: '200x200',\n        process: 'crop'\n      });\n\n      schema.version({\n        name: 'small',\n        size: '50x50',\n        process: 'crop'\n      });\n    });\n\n    uploader = new AvatarUploader();\n\n    uploader.process('image1', file.path, function(images){\n      console.log(images.avatar); // '/images/uploads/image1-avatar.jpg'\n      console.log(images.small); // '/images/uploads/image1-small.jpg'\n    })\n\n## Configuration\n\nIn papercut, you can set the image directory and default process by getter and setter:\n\n    var papercut = require('papercut');\n\n    //storage type, have file and s3\n    papercut.set('storage', 'file');\n    //directory for saving image\n    papercut.set('directory', './images/uploads');\n    //url path to the directory\n    papercut.set('url', '/images/uploads');\n    //set output images extension\n    papercut.set('extension', 'jpg');\n\nAlso, you can set the environment dependent configuration, it detect the `process.env.NODE_ENV` param.  \nyou can call `export NODE_ENV=[environment]` to change environment.\n\n    papercut.configure('production', function(){\n      //set storage to s3 for production environment\n      papercut.set('storage', 's3');\n      //set s3 key from environment.\n      papercut.set('S3_KEY', process.env.S3_KEY);\n      papercut.set('S3_SECRET', process.env.S3_SECRET);\n      //s3 bucket name\n      papercut.set('bucket', 'papercut');\n    });\n\n## Schema and Version\n\nAfter configuration, you can create an uploader to process images with multiple version by Schema\n\n    var Uploader = papercut.Schema(function(schema){\n      schema.version({\n        name: 'thumbnail',\n        size: '45x45',\n        process: 'crop'\n      });\n\n      schema.version({\n        name: 'large',\n        size: '600x480',\n        process: 'resize'\n      });\n\n      schema.version({\n        name: 'origin',\n        process: 'copy'\n      });\n    });\n\nYou can also set custom param according to version\n\n    var Uploader = papercut.Schema(function(schema){\n      schema.version({\n        name: 'auto',\n        size: '120x120',\n        process: 'crop'\n        custom: ['-auto-orient']\n      });\n    });\n\n## Process\n\nWith uploader, you can pass the image identifier and image path to process images.  \nAlso with images url in different versions:\n\n    var uploader = new Uploader();\n\n    uploader.process('412341', '/tmp/13912304.jpg', function(err, images){\n      console.log(images);\n      // {\n      //  thumbnail: '/images/upload/412341-thumbnail.jpg',\n      //  large: '/images/upload/412341-large.jpg',\n      //  origin: '/images/upload/412341-origin.jpg'\n      // }\n    });\n\n##Express\n\nCheck out the [express example](https://github.com/Rafe/papercut/blob/master/examples/express.coffee) in project for how to use it in express framework.\n\n## Todos\n+ Process image from previous one to improve processing speed.\n+ Custom gravity\n+ Api improvement\n\n#### Licence : MIT\n\n#### Author : [Jimmy Chao](http://neethack.com) (daizenga@gmail.com)\n",
  "readmeFilename": "README.md",
  "_id": "papercut@0.0.6",
  "dist": {
    "shasum": "767f9dfe4a14ce0d9a0010c5f47d24d0dc71e4be"
  },
  "_from": "papercut@",
  "_resolved": "https://registry.npmjs.org/papercut/-/papercut-0.0.6.tgz"
}
